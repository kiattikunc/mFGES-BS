library(rcausal)
library(DOT)
library(tictoc)
library(pcalg)
library(bnlearn)
#load dataset
set <-'ALARM_N_100k.csv'
pathset <-'trainingData_ALARM_N_100k.csv'
dataset <- read.csv(paste0('input/',pathset),header = TRUE,na.strings=c(""),check.names=FALSE)



dataset$F12 <- NULL
dataset$F13 <- NULL
dataset$F14 <- NULL
dataset$F15 <- NULL
dataset$F27 <- NULL
dataset$F28 <- NULL
dataset$F34 <- NULL
dataset$F37 <- NULL
dataset$F45 <- NULL
dataset$F57 <- NULL
dataset$F59 <- NULL
dataset$F65 <- NULL
dataset$F66 <- NULL
dataset$F68 <- NULL
dataset$F69 <- NULL
dataset$F72 <- NULL
dataset$F88 <- NULL
dataset$F89 <- NULL
dataset$F72 <- NULL


#read the true PAG
source("tetrad_to_amat.R")
amat <-tetrad_to_amat('input\\ALARM_PAG.txt', 'input\\ALARM_PAG_header.txt')

#tetradrunner.getAlgorithmParameters(algoId ='rfci-bsc')

#run tetrad
tic.clearlog()
for (i in c(1)){

  tic("Tetradtime rftc-bsc")
  tetradrunner <- tetradrunner(algoId ='fci',df = dataset,dataType='discrete',verbose=TRUE)
  toc(log = TRUE, quiet = TRUE)
  log.txt <- tic.log(format = TRUE)
  #tetradrunner$nodes

  if (length(tetradrunner$edges)!=0){


  path <-paste0('C:\\Users\\kiattikun\\Documents\\R - Structure Learning',
                '\\R-structure-learning-with-latent\\output\\RFCI\\'
                ,i,'- PAGlearned_RFCI_',set)
  source("exportCSV.R")
  exportCSV(tetradrunner$node,tetradrunner$edge,path)

  tetradrunner$nodes
  tetradrunner$edges
  #write the running time to the file
  pathtime <-paste0('output/RFCI/' ,i,'-time_rfci_from_',set)
  write.csv(unlist(log.txt),pathtime )



  #write the raw amat to the file
  source("convertTetradGtoPcalG.R")
  Tetrad.pag = convertTetradGtoPcalG(tetradrunner$nodes,tetradrunner$edges)
  pathmat <- paste0('output\\RFCI\\',i,'-amatPAG_rfci_from_',set)
  write.csv(Tetrad.pag$mat,pathmat)


  #cal meausurements
  #source("precisionrecall.R")
  #k <-precisionrecall(Tetrad.pag$mat, amat$amat)
  #pathmeaurement <- paste0('output\\RFCI-Bsc\\',i,'-rfci-bsc.csv')
  #write.csv(k,pathmeaurement)

  #print(k$precision)
  #print(k$recall)
  }
}
###############################################################




